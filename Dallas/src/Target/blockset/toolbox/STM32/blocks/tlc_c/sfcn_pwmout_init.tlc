%%***************************************************************************************
%% file         sfcn_pwmout_init.tlc
%% brief        Target Language Compiler file that contains the code generation specifics
%%              for an S-function with the same name.
%%
%%---------------------------------------------------------------------------------------
%%                          C O P Y R I G H T
%%---------------------------------------------------------------------------------------
%%  Copyright 2014 (c) by HAN Automotive     http://www.han.nl     All rights reserved
%%
%%---------------------------------------------------------------------------------------
%%                            L I C E N S E
%%---------------------------------------------------------------------------------------
%% This file is part of the HANcoder Target Matlab/Simulink Blockset environment. For the
%% licensing terms, please contact HAN Automotive.
%%
%% This software has been carefully tested, but is not guaranteed for any particular
%% purpose. HAN Automotive does not offer any warranties and does not guarantee the 
%% accuracy, adequacy, or completeness of the software and is not responsible for any 
%% errors or omissions or the results obtained from use of the software.
%%
%%***************************************************************************************
%implements  sfcn_pwmout_init "C"

%% add required include files
%<LibAddToCommonIncludes("pwmout.h")>

%% Function: BlockTypeSetup ==========================================================
%%
%% Purpose:
%%      Code generation for configuration
%%
%function BlockTypeSetup(block, system) void
  %% Generate the function call subsystem function prototype.
  %openfile tmpBuf
  void PwmoutIRQ_%<block.RTWdata.moduleID>(void);
  %closefile tmpBuf
  %% write it to the model's source file.
  %assign srcFile = LibGetModelDotCFile()
  %<LibSetSourceFileSection(srcFile, "UserTop", tmpBuf)>
%endfunction  


%% Function: Start ==========================================================
%%
%% Purpose:
%%      Code generation for initialization
%%
%function Start(block, system) Output
  %%
  /* initialize the PWM module and register the callback handler */
  PwmoutInit(%<block.RTWdata.moduleID>, %<block.RTWdata.frequency>, %<block.RTWdata.alignment>);
  PwmoutRegisterPeriodCompleteCallback(%<block.RTWdata.moduleID>, PwmoutIRQ_%<block.RTWdata.moduleID>);
  %if ISEQUAL(CAST("Number",block.RTWdata.ch1On), 1)
  /* configures channel 1 */
  PwmoutConfigure(%<block.RTWdata.ch1ID>, %<block.RTWdata.ch1Pol>, %<block.RTWdata.ch1Inv>);
  %endif
  %if ISEQUAL(CAST("Number",block.RTWdata.ch2On), 1)
  /* configures channel 2 */
  PwmoutConfigure(%<block.RTWdata.ch2ID>, %<block.RTWdata.ch2Pol>, %<block.RTWdata.ch2Inv>);
  %endif
  %if ISEQUAL(CAST("Number",block.RTWdata.ch3On), 1)
  /* configures channel 3 */
  PwmoutConfigure(%<block.RTWdata.ch3ID>, %<block.RTWdata.ch3Pol>, %<block.RTWdata.ch3Inv>);
  %endif
  %if ISEQUAL(CAST("Number",block.RTWdata.ch4On), 1)
  /* configures channel 4 */
  PwmoutConfigure(%<block.RTWdata.ch4ID>, %<block.RTWdata.ch4Pol>, %<block.RTWdata.ch4Inv>);
  %endif
  %%
%endfunction

%% Function: Output ==========================================================
%%
%% Purpose:
%%      Code generation for signal output
%%
%function Outputs(block, system) Output
	%%
    %% Generate the function call subsystem as a seperate function.
    %openfile tmpBuf
    void PwmoutIRQ_%<block.RTWdata.moduleID>(void)
    {
      %foreach callIdx = NumSFcnSysOutputCalls
        %if LibIsEqual(SFcnSystemOutputCall[callIdx].BlockToCall, "unconnected")
          %continue
        %endif
        %% call the downstream system
        %<LibBlockExecuteFcnCall(block, callIdx)>\
      %endforeach    
    }
    %closefile tmpBuf
    %% write it to the model's source file.
    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Functions", tmpBuf)>
    
  
  %%
%endfunction



%%******************************* end of sfcn_pwmout_init.tlc ***************************





